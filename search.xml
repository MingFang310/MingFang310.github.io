<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>个人博客的搭建以及学习历程</title>
      <link href="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/"/>
      <url>/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>温故而知新，可以为师矣。</p><p>对我来说，搭建自己的个人博客不仅仅是为了自己的兴趣爱好。同时，写博客也可以很好的记录下自己成长的每一个脚印。我们往往在一路再向前赶路，却忘了放慢脚步。放慢脚步来反思自己的不足，明白自己为何跌倒。这样我们才可以走得更远。</p><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><p>这一次我们搭建的博客是需要使用：</p><ul><li>Git</li><li>Hexo</li><li>Node.js</li></ul><h3 id="下载并安装Node-js"><a href="#下载并安装Node-js" class="headerlink" title="下载并安装Node.js"></a>下载并安装Node.js</h3><p>其中，我们需要在Node.js的官网上面下载Node.js的安装包。</p><p><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/Node.js_phase01.png" alt="Node.js_phase01"></p><p>一般我们选择正式版，正式版还是最稳定的版本。(使用最新版本可能会与教程的步骤有所出入)</p><p>一般在安装过程中点击next键按照默认的设置来就行。安装路径按照自己喜好来就行。</p><p>使用cmd面板来测试Node.js是否有安装成功。使用win键+R键来呼出cmd面板。输入node -v命令行来查看我们所安装的node的版本。出现版本号就证明我们已经安装好了。</p><pre class=" language-bash"><code class="language-bash">node -v <span class="token comment" spellcheck="true">#查看node版本</span><span class="token function">npm</span> -v <span class="token comment" spellcheck="true">#查看npm版本</span></code></pre><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/cmd_node -v&npm -v.png" alt="cmd_node -v&npm -v" style="zoom:80%;"><p>由于我们国内有墙*<del>你懂的</del>*,导致一些镜像源上下载的很慢。所以，我们还需要来利用npm来安装cnpm。这样可以加快下载速度。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>http://registry.npm.taobao.org <span class="token comment" spellcheck="true">#安装淘宝的cnpm 管理器</span></code></pre><p>耐心的等待之后就可以下载完成。</p><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/cmd_hexo_deployer_git.png" alt="cmd_hexo_deployer_git" style="zoom:80%;"><p>当我们输入cnpm后，出现反馈就说明我们的cnpm也已经安装好了。</p><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/cmd_cnpm_check.png" alt="cmd_cnpm_check" style="zoom:80%;"><h3 id="安装Hexo框架"><a href="#安装Hexo框架" class="headerlink" title="安装Hexo框架"></a>安装Hexo框架</h3><p>我们终于可以下载并且安装Hexo框架了。</p><p>在控制台输入代码：</p><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> -g hexo-cli <span class="token comment" spellcheck="true">#安装hexo框架</span></code></pre><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/cmd_hexo_download.png" alt="cmd_hexo_download" style="zoom:80%;"><p>输入代码hexo -v来查看安装的hexo框架版本。</p><pre class=" language-bash"><code class="language-bash">hexo -v <span class="token comment" spellcheck="true">#查看hexo版本</span></code></pre><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/cmd_hexo_v.png" alt="cmd_hexo_v" style="zoom:80%;"><p>使用代码mkdir blog来创建blog目录</p><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> blog <span class="token comment" spellcheck="true">#创建blog目录</span></code></pre><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/cmd_mkdir_blog.png" alt="cmd_mkdir_blog" style="zoom:80%;"><p>如图所示，我们已经在目录下成功创建了一个blog文件夹。</p><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/pc_mkdir_blog.png" alt="pc_mkdir_blog" style="zoom: 67%;"><p>这里我不想把我的博客文件装在C盘，我把文件装在F盘</p><p>具体指令需要查看cmd的常用指令集合。<a href="https://blog.csdn.net/qq_33862644/article/details/81171521">点击这里查看</a></p><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> /d F:study <span class="token comment" spellcheck="true">#跳转到其他硬盘的其他文件夹</span></code></pre><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/cmd_cd.png" alt="cmd_cd" style="zoom:80%;"><p>使用cd blog来进入blog的根目录</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> blog <span class="token comment" spellcheck="true">#进入blog目录</span></code></pre><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/cmd_cd_blog.png" alt="cmd_cd_blog" style="zoom:80%;"><h2 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h2><p>使用hexo init生成博客 初始化博客</p><pre class=" language-bash"><code class="language-bash">hexo init <span class="token comment" spellcheck="true">#生成博客 初始化博客</span></code></pre><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/cmd_hexo_init.png" alt="cmd_hexo_init" style="zoom:80%;"><p>随后我们就可以使用hexo s来启动博客的本地服务器，来正式的查看我们的网页了。</p><pre class=" language-bash"><code class="language-bash">hexo s <span class="token comment" spellcheck="true">#启动本地博客服务</span></code></pre><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/cmd_hexo_s.png" alt="cmd_hexo_s" style="zoom:80%;"><p>随后在网页上输入网页链接 <a href="http://localhost:4000/">http://localhost:4000</a> 来查看我们的博客网页。</p><p>如图所示，我们已经有了基本自带样式的博客网页，我们所做的从搭建环境到初始化博客已经全部做完了。接下来，就是开始创建新的博客内容以及将我们的博客托管到GitHub网页上。</p><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/web_hexo_blogpage.png" alt="web_hexo_blogpage" style="zoom:80%;"><h2 id="创建新的博客内容"><a href="#创建新的博客内容" class="headerlink" title="创建新的博客内容"></a>创建新的博客内容</h2><p>既然有了博客的基本框架，那么我就该把我们所想要分享的内容放到博客网页上去。具体的步骤如下：</p><p>使用命令行hexo n“这是博客文章名字”来创建新的博客内容。</p><pre class=" language-bash"><code class="language-bash">hexo n <span class="token string">"这是博客文章名字"</span> <span class="token comment" spellcheck="true">#创建新的文章 </span></code></pre><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/cmd_hexo_n.png" alt="cmd_hexo_n" style="zoom:80%;"><p>接下来我们就可以使用文本编辑工具Markdown来编辑我们的博文。这里我也推荐给大家一款很好用的软件<a href="https://www.typora.io/">Typora</a>.</p><p>待我们编辑完博文之后，我们就该将新的博文发布我们的网页里面。</p><p>先清理一下，然后再生成博文。</p><pre class=" language-bash"><code class="language-bash">hexo c <span class="token comment" spellcheck="true">#清理一下hexo g #生成</span></code></pre><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/cmd_hexo_g.png" alt="cmd_hexo_g" style="zoom:80%;"><h2 id="将博客部署到GitHub上"><a href="#将博客部署到GitHub上" class="headerlink" title="将博客部署到GitHub上"></a>将博客部署到GitHub上</h2><p>我们的博客不可能只能在本地localhost上查看，我们需要将我们所想分享的东西放到网上去，让更多的人所了解。</p><p>首先我们要先登录到<a href="https://github.com/">GitHub</a>上。</p><p>登录之后我们点击”Your repositories”，在选择新建一个存储库。</p><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/web_github_newRe.png" alt="web_github_newRe" style="zoom:80%;"><p>然后我们一定要在对存储库命名的时候一定要是你的昵称比如我们的就是：MingFang310.github.io </p><p>然后我们点击create就好</p><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/web_github.png" alt="web_github" style="zoom:80%;"><p>【重要】随后我们需要在博客的目录下安装git的部署插件</p><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> --save hexo-deployer-git <span class="token comment" spellcheck="true">#在blog目录下安装git部署插件</span></code></pre><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/cmd_hexo_deployer_git.png" alt="cmd_hexo_deployer_git" style="zoom:80%;"><p>(我这边自己已经装过一遍了，初次安装的时候，等待一下就好)</p><p>同时我们也需要更改_config.yml文件的配置，这里我们用文本编辑器VSCode来打开该文件。</p><p>点击进去以后找到#Deployment并且修改代码：</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Deployment    </span><span class="token comment" spellcheck="true">## Docs: https://hexo.io/docs/deployment.html    </span>deploy:              type: <span class="token function">git</span>             repo: https://github.com/YourGithubName/YourGithubName.github.io.git              branch: master</code></pre><p>网站链接为你在GitHub上创建的存储库的链接</p><p><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/vscode_change_deployment.png" alt="vscode_change_deployment"></p><p>最后一步，也就是使用命令行hexo d 对该博客部署到GitHub上面。</p><pre class=" language-bash"><code class="language-bash">hexo d    <span class="token comment" spellcheck="true">#部署到远程Github仓库</span></code></pre><p>最后我们就可以直接用我们GitHub网页链接的后半段直接访问我们的博客了！</p><p><img src="/2021/07/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/web_blog_link.png" alt="web_blog_link"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol><li><p>hexo引用本地图片无法显示: <a href="https://blog.csdn.net/xjm850552586/article/details/84101345">https://blog.csdn.net/xjm850552586/article/details/84101345</a></p></li><li><p>手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo: <a href="https://www.bilibili.com/video/BV1Yb411a7ty?from=search&amp;seid=15443300066182090076">https://www.bilibili.com/video/BV1Yb411a7ty?from=search&amp;seid=15443300066182090076</a></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/07/05/hello-world/"/>
      <url>/2021/07/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
