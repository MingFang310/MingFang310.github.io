<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java学习笔记2 - java基础</title>
      <link href="/2021/07/07/java-xue-xi-bi-ji-2-java-ji-chu/"/>
      <url>/2021/07/07/java-xue-xi-bi-ji-2-java-ji-chu/</url>
      
        <content type="html"><![CDATA[<p>自用的学习笔记，若有错误欢迎指出。</p><h2 id="java关键字"><a href="#java关键字" class="headerlink" title="java关键字"></a>java关键字</h2><p>java所有的组成部分都需要名字。类名、变量名以及方法名都被称之为标识符。</p><p>以下的这些都是java的关键字，在命名的时候<strong>不能使用</strong>。</p><p><img src="/2021/07/07/java-xue-xi-bi-ji-2-java-ji-chu/java%E5%85%B3%E9%94%AE%E5%AD%97.png" alt="java关键字"></p><h2 id="java命名注意点"><a href="#java命名注意点" class="headerlink" title="java命名注意点"></a>java命名注意点</h2><ul><li>所有的标识符都应该以字母(A-Z, a - z)、美元符$、或者下划线<code>_</code>开始。</li><li>首字符之后可以是字母(A-Z, a - z)、美元符$、或者下划线<code>_</code>的任意字符组合。</li><li><strong>不能使用关键字作为变量名或者方法名。</strong></li><li>标识符是<strong>大小写敏感</strong>的。</li><li>合法标识符举例：<ul><li>age</li><li>$salary</li><li>_value</li><li>_1boy</li></ul></li><li>非法标识符举例：<ul><li>123abc</li><li>207somker</li><li>-salary</li><li>#boy</li></ul></li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ul><li><p>java是一门强类型语言</p><ul><li>要求变量的使用严格规定，所有的变量都必须先定义后使用。</li></ul></li><li><p>java的数据类型分为两大类</p><ul><li>基本类型(primitive type)<ul><li>数值类型<ul><li>整数类型<ul><li>byte: 占1个字节范围：-128~127</li><li>short：占2个字节范围：-32768~32767</li><li>int：占4个字节范围：-2147483648~2147483647</li><li>long：占8个字节范围：略</li></ul></li><li>浮点类型<ul><li>float：占4个字节</li><li>double：占8个字节</li></ul></li><li>字符类型(char占8个字节)</li></ul></li><li>Boolean类型(占1位其值只有true &amp; false)</li></ul></li><li>引用类型(reference type)<ul><li>类</li><li>接口</li><li>数组</li></ul></li></ul></li></ul><h2 id="什么是字节"><a href="#什么是字节" class="headerlink" title="什么是字节"></a>什么是字节</h2><ul><li>位(bit)：是计算机内部数据最小单位。例：1100 1100是一个八位二进制数。</li><li>字节(byte)：是计算机中数据处理的基本单位，习惯上用大写B来表示。</li><li>1B(byte，字节) = 8bit(位)</li><li>字符：是指计算机中使用的字母、数字、字和符号。</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自学笔记 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java学习笔记1 - java入门</title>
      <link href="/2021/07/07/java-xue-xi-bi-ji-1-java-ru-men/"/>
      <url>/2021/07/07/java-xue-xi-bi-ji-1-java-ru-men/</url>
      
        <content type="html"><![CDATA[<p>自用的学习笔记，若有错误欢迎指出。</p><h2 id="java的诞生"><a href="#java的诞生" class="headerlink" title="java的诞生"></a>java的诞生</h2><h3 id="C-amp-C"><a href="#C-amp-C" class="headerlink" title="C &amp; C++"></a>C &amp; C++</h3><ul><li>1972年C语言诞生<ul><li>贴近硬件，运行极快，效率极高。</li><li>操作系统，编译器，数据库，网络系统等等</li><li>指针和内存管理</li></ul></li><li>1982年C++诞生<ul><li>面向对象</li><li>兼容C</li><li>图形领域、游戏等等</li></ul></li></ul><h3 id="java初生"><a href="#java初生" class="headerlink" title="java初生"></a>java初生</h3><ul><li>设计理念：<ul><li>语法有点像C</li><li>没有指针</li><li>没有内存管理</li><li>真正的可移植性</li><li>面向对象</li><li>类型安全</li><li>高质量的类库</li></ul></li></ul><ul><li>由于1995年的互联网刚刚诞生，网页简单而且粗糙，缺乏互动性。</li><li>有人利用出java制作出图形界面的程序(Applet)，提高了用户体验，同时也吸引了很多商业巨头的眼光和好评。</li><li>java 2 标准版(J2SE): 桌面端</li><li>java 2 移动版(J2ME): 手机端</li><li>java 2 企业版(J2EE): 占领服务器</li><li>基于java开发了很多平台，系统，工具<ul><li>构建工具: Ant, Maven, Jekins</li><li>应用服务器: Tomcat, Jetty, Jboss, Websphere, weblogic</li><li>Web开发: Struts, Spring, Hibernate, myBatis</li><li>开发工具: Eclipse, Netbean, intellij idea, Jbuilder</li></ul></li><li>2006: Hadoop(大数据领域)</li><li>2008: Android(手机端)</li></ul><h2 id="java的特性和优势"><a href="#java的特性和优势" class="headerlink" title="java的特性和优势"></a>java的特性和优势</h2><ul><li>简单性</li><li>面向对象</li><li>可移植性</li><li>高性能</li><li>分布式</li><li>动态性</li><li>多线程</li><li>安全性</li><li>健壮性</li></ul><h2 id="java三大版本"><a href="#java三大版本" class="headerlink" title="java三大版本"></a>java三大版本</h2><ul><li>Write Once, Run Anywhere <ul><li>可移植性，JVM虚拟机来实现跨平台</li></ul></li><li>JavaSE: 标准版<ul><li>开发桌面程序，控制台开发</li></ul></li><li>JavaME: 嵌入式开发<ul><li>手机，小家电(现已不流行使用)</li></ul></li><li>JavaEE: E企业级开发<ul><li>web端，服务器开发</li></ul></li></ul><h2 id="JDK-JRE-JVM"><a href="#JDK-JRE-JVM" class="headerlink" title="JDK, JRE, JVM"></a>JDK, JRE, JVM</h2><ul><li>JDK: Java Development Kit</li><li>JRE: Java Runtime Environment</li><li>JVM: Java Virtual Machine</li></ul><p>![JDK-JRE-JVM](./java学习笔记1 - java入门/JDK-JRE-JVM.png)</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自学笔记 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DOS基本指令</title>
      <link href="/2021/07/07/dos-ji-ben-zhi-ling/"/>
      <url>/2021/07/07/dos-ji-ben-zhi-ling/</url>
      
        <content type="html"><![CDATA[<p>自用的学习笔记，若有错误欢迎指出。</p><h2 id="基本的DOS指令"><a href="#基本的DOS指令" class="headerlink" title="基本的DOS指令"></a>基本的DOS指令</h2><h3 id="开启DOS控制台的几种方式"><a href="#开启DOS控制台的几种方式" class="headerlink" title="开启DOS控制台的几种方式"></a>开启DOS控制台的几种方式</h3><p>打开cmd的方式</p><ol><li>使用开始菜单栏 —&gt; 系统 —&gt; 命令提示符;</li><li>win键 + R，输入<code>cmd</code>打开控制台(推荐使用);</li><li>在任意文件夹下面，按住shift键+鼠标右键点击，在此处命令行窗口;</li><li>资源管理器的地址栏前面输入<code>cmd</code>路径;</li><li>鼠标右键在第一种方法那里的命令提示符，选择”以管理员身份运行”，可以得到计算机的最高权限;</li></ol><h3 id="常用的DOS命令"><a href="#常用的DOS命令" class="headerlink" title="常用的DOS命令"></a>常用的DOS命令</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#盘符切换</span>E:<span class="token comment" spellcheck="true">#查看当前目录下的所有文件</span><span class="token function">dir</span><span class="token comment" spellcheck="true">#切换目录</span><span class="token function">cd</span> /d F:\study\xxx<span class="token comment" spellcheck="true">#返回上一级</span><span class="token function">cd</span> <span class="token punctuation">..</span><span class="token comment" spellcheck="true">#清理屏幕</span>cls<span class="token comment" spellcheck="true">#查看电脑的ip</span>ipconfig<span class="token comment" spellcheck="true">#打开应用</span>    calc <span class="token comment" spellcheck="true">#计算器</span>    notepad <span class="token comment" spellcheck="true">#记事本</span>    mspaint <span class="token comment" spellcheck="true">#画图工具</span><span class="token comment" spellcheck="true">#ping 命令</span><span class="token function">ping</span> www.baidu.com<span class="token comment" spellcheck="true">#文件操作</span><span class="token comment" spellcheck="true">##新建文件</span>    md <span class="token function">test</span> <span class="token comment" spellcheck="true">#新建了一个名为"test"的文件夹</span>    cd<span class="token operator">></span>a.txt <span class="token comment" spellcheck="true">#新建了一个"a.txt"文件</span>    <span class="token comment" spellcheck="true">##删除文件</span>    del<span class="token operator">></span>a.txt <span class="token comment" spellcheck="true">#删除掉刚刚新建的"a.txt"文件</span>    rd <span class="token function">test</span> <span class="token comment" spellcheck="true">#删除掉刚刚新建的"test"的文件夹</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DOS </tag>
            
            <tag> Typora </tag>
            
            <tag> 自学笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客的搭建以及学习历程</title>
      <link href="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/"/>
      <url>/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/</url>
      
        <content type="html"><![CDATA[<p>温故而知新，可以为师矣。</p><p>对我来说，搭建自己的个人博客不仅仅是为了自己的兴趣爱好。同时，写博客也可以很好的记录下自己成长的每一个脚印。我们往往在一路再向前赶路，却忘了放慢脚步。放慢脚步来反思自己的不足，明白自己为何跌倒。这样我们才可以走得更远。</p><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><p>这一次我们搭建的博客是需要使用：</p><ul><li>Git</li><li>Hexo</li><li>Node.js</li></ul><h3 id="下载并安装Node-js"><a href="#下载并安装Node-js" class="headerlink" title="下载并安装Node.js"></a>下载并安装Node.js</h3><p>其中，我们需要在Node.js的官网上面下载Node.js的安装包。</p><p><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/Node.js_phase01.png" alt="Node.js_phase01"></p><p>一般我们选择正式版，正式版还是最稳定的版本。(使用最新版本可能会与教程的步骤有所出入)</p><p>一般在安装过程中点击next键按照默认的设置来就行。安装路径按照自己喜好来就行。</p><p>使用cmd面板来测试Node.js是否有安装成功。使用win键+R键来呼出cmd面板。输入node -v命令行来查看我们所安装的node的版本。出现版本号就证明我们已经安装好了。</p><pre class=" language-bash"><code class="language-bash">node -v <span class="token comment" spellcheck="true">#查看node版本</span><span class="token function">npm</span> -v <span class="token comment" spellcheck="true">#查看npm版本</span></code></pre><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/cmd_node -v&npm -v.png" alt="cmd_node -v&npm -v" style="zoom:80%;"><p>由于我们国内有墙*<del>你懂的</del>*,导致一些镜像源上下载的很慢。所以，我们还需要来利用npm来安装cnpm。这样可以加快下载速度。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>http://registry.npm.taobao.org <span class="token comment" spellcheck="true">#安装淘宝的cnpm 管理器</span></code></pre><p>耐心的等待之后就可以下载完成。</p><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/cmd_hexo_deployer_git.png" alt="cmd_hexo_deployer_git" style="zoom:80%;"><p>当我们输入cnpm后，出现反馈就说明我们的cnpm也已经安装好了。</p><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/cmd_cnpm_check.png" alt="cmd_cnpm_check" style="zoom:80%;"><h3 id="安装Hexo框架"><a href="#安装Hexo框架" class="headerlink" title="安装Hexo框架"></a>安装Hexo框架</h3><p>我们终于可以下载并且安装Hexo框架了。</p><p>在控制台输入代码：</p><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> -g hexo-cli <span class="token comment" spellcheck="true">#安装hexo框架</span></code></pre><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/cmd_hexo_download.png" alt="cmd_hexo_download" style="zoom:80%;"><p>输入代码hexo -v来查看安装的hexo框架版本。</p><pre class=" language-bash"><code class="language-bash">hexo -v <span class="token comment" spellcheck="true">#查看hexo版本</span></code></pre><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/cmd_hexo_v.png" alt="cmd_hexo_v" style="zoom:80%;"><p>使用代码mkdir blog来创建blog目录</p><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> blog <span class="token comment" spellcheck="true">#创建blog目录</span></code></pre><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/cmd_mkdir_blog.png" alt="cmd_mkdir_blog" style="zoom:80%;"><p>如图所示，我们已经在目录下成功创建了一个blog文件夹。</p><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/pc_mkdir_blog.png" alt="pc_mkdir_blog" style="zoom: 67%;"><p>这里我不想把我的博客文件装在C盘，我把文件装在F盘</p><p>具体指令需要查看cmd的常用指令集合。<a href="https://blog.csdn.net/qq_33862644/article/details/81171521">点击这里查看</a></p><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> /d F:study <span class="token comment" spellcheck="true">#跳转到其他硬盘的其他文件夹</span></code></pre><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/cmd_cd.png" alt="cmd_cd" style="zoom:80%;"><p>使用cd blog来进入blog的根目录</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> blog <span class="token comment" spellcheck="true">#进入blog目录</span></code></pre><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/cmd_cd_blog.png" alt="cmd_cd_blog" style="zoom:80%;"><h2 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h2><p>使用hexo init生成博客 初始化博客</p><pre class=" language-bash"><code class="language-bash">hexo init <span class="token comment" spellcheck="true">#生成博客 初始化博客</span></code></pre><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/cmd_hexo_init.png" alt="cmd_hexo_init" style="zoom:80%;"><p>随后我们就可以使用hexo s来启动博客的本地服务器，来正式的查看我们的网页了。</p><pre class=" language-bash"><code class="language-bash">hexo s <span class="token comment" spellcheck="true">#启动本地博客服务</span></code></pre><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/cmd_hexo_s.png" alt="cmd_hexo_s" style="zoom:80%;"><p>随后在网页上输入网页链接 <a href="http://localhost:4000/">http://localhost:4000</a> 来查看我们的博客网页。</p><p>如图所示，我们已经有了基本自带样式的博客网页，我们所做的从搭建环境到初始化博客已经全部做完了。接下来，就是开始创建新的博客内容以及将我们的博客托管到GitHub网页上。</p><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/web_hexo_blogpage.png" alt="web_hexo_blogpage" style="zoom:80%;"><h2 id="创建新的博客内容"><a href="#创建新的博客内容" class="headerlink" title="创建新的博客内容"></a>创建新的博客内容</h2><p>既然有了博客的基本框架，那么我就该把我们所想要分享的内容放到博客网页上去。具体的步骤如下：</p><p>使用命令行hexo n“这是博客文章名字”来创建新的博客内容。</p><pre class=" language-bash"><code class="language-bash">hexo n <span class="token string">"这是博客文章名字"</span> <span class="token comment" spellcheck="true">#创建新的文章 </span></code></pre><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/cmd_hexo_n.png" alt="cmd_hexo_n" style="zoom:80%;"><p>接下来我们就可以使用文本编辑工具Markdown来编辑我们的博文。这里我也推荐给大家一款很好用的软件<a href="https://www.typora.io/">Typora</a>.</p><p>待我们编辑完博文之后，我们就该将新的博文发布我们的网页里面。</p><p>先清理一下，然后再生成博文。</p><pre class=" language-bash"><code class="language-bash">hexo c <span class="token comment" spellcheck="true">#清理一下hexo g #生成</span></code></pre><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/cmd_hexo_g.png" alt="cmd_hexo_g" style="zoom:80%;"><h2 id="将博客部署到GitHub上"><a href="#将博客部署到GitHub上" class="headerlink" title="将博客部署到GitHub上"></a>将博客部署到GitHub上</h2><p>我们的博客不可能只能在本地localhost上查看，我们需要将我们所想分享的东西放到网上去，让更多的人所了解。</p><p>首先我们要先登录到<a href="https://github.com/">GitHub</a>上。</p><p>登录之后我们点击”Your repositories”，在选择新建一个存储库。</p><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/web_github_newRe.png" alt="web_github_newRe" style="zoom:80%;"><p>然后我们一定要在对存储库命名的时候一定要是你的昵称比如我们的就是：MingFang310.github.io </p><p>然后我们点击create就好</p><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/web_github.png" alt="web_github" style="zoom:80%;"><p>【重要】随后我们需要在博客的目录下安装git的部署插件</p><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> --save hexo-deployer-git <span class="token comment" spellcheck="true">#在blog目录下安装git部署插件</span></code></pre><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/cmd_hexo_deployer_git.png" alt="cmd_hexo_deployer_git" style="zoom:80%;"><p>(我这边自己已经装过一遍了，初次安装的时候，等待一下就好)</p><p>同时我们也需要更改_config.yml文件的配置，这里我们用文本编辑器VSCode来打开该文件。</p><p>点击进去以后找到#Deployment并且修改代码：</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Deployment    </span><span class="token comment" spellcheck="true">## Docs: https://hexo.io/docs/deployment.html    </span>deploy:              type: <span class="token function">git</span>             repo: https://github.com/YourGithubName/YourGithubName.github.io.git              branch: master</code></pre><p>网站链接为你在GitHub上创建的存储库的链接</p><p><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/vscode_change_deployment.png" alt="vscode_change_deployment"></p><p>最后一步，也就是使用命令行hexo d 对该博客部署到GitHub上面。</p><pre class=" language-bash"><code class="language-bash">hexo d    <span class="token comment" spellcheck="true">#部署到远程Github仓库</span></code></pre><p>最后我们就可以直接用我们GitHub网页链接的后半段直接访问我们的博客了！</p><p><img src="/2021/07/05/ge-ren-bo-ke-de-da-jian-yi-ji-xue-xi-li-cheng/web_blog_link.png" alt="web_blog_link"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol><li><p>hexo引用本地图片无法显示: <a href="https://blog.csdn.net/xjm850552586/article/details/84101345">https://blog.csdn.net/xjm850552586/article/details/84101345</a></p></li><li><p>手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo: <a href="https://www.bilibili.com/video/BV1Yb411a7ty?from=search&amp;seid=15443300066182090076">https://www.bilibili.com/video/BV1Yb411a7ty?from=search&amp;seid=15443300066182090076</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Hexo </tag>
            
            <tag> Git </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
